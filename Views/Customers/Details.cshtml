@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model BookshopManagement.Models.Customer

@{
    ViewData["Title"] = "Customer Details";
}

<h1>Customer Details</h1>

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <h4>@Model.FullName</h4>
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Email)</dt>
                    <dd class="col-sm-9">@Html.DisplayFor(model => model.Email)</dd>
                    
                    <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Phone)</dt>
                    <dd class="col-sm-9">@Html.DisplayFor(model => model.Phone)</dd>
                    
                    <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Address)</dt>
                    <dd class="col-sm-9">@Html.DisplayFor(model => model.Address)</dd>
                    
                    <dt class="col-sm-3">@Html.DisplayNameFor(model => model.City)</dt>
                    <dd class="col-sm-9">@Html.DisplayFor(model => model.City)</dd>
                    
                    <dt class="col-sm-3">@Html.DisplayNameFor(model => model.State)</dt>
                    <dd class="col-sm-9">@Html.DisplayFor(model => model.State)</dd>
                    
                    <dt class="col-sm-3">@Html.DisplayNameFor(model => model.PostalCode)</dt>
                    <dd class="col-sm-9">@Html.DisplayFor(model => model.PostalCode)</dd>
                    
                    <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Country)</dt>
                    <dd class="col-sm-9">@Html.DisplayFor(model => model.Country)</dd>
                    
                    <dt class="col-sm-3">@Html.DisplayNameFor(model => model.DateOfBirth)</dt>
                    <dd class="col-sm-9">@(Model.DateOfBirth?.ToString("MM/dd/yyyy") ?? "N/A")</dd>
                </dl>
            </div>
        </div>
        
        <!-- Place Order Form -->
        <div class="card mt-4">
            <div class="card-header">
                <h5>Place New Order</h5>
            </div>
            <div class="card-body">
                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        @TempData["SuccessMessage"]
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                }
                
                <form asp-controller="Customers" asp-action="PlaceOrder" method="post" id="orderForm">
                    <input type="hidden" name="customerId" value="@Model.CustomerId" />
                    
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group mb-3">
                                <label for="shopId" class="form-label">Select Shop</label>
                                <select id="shopId" name="shopId" class="form-control" required>
                                    <option value="">-- Select a Shop --</option>
                                    @if (ViewData["Shops"] is SelectList shops)
                                    {
                                        @foreach (var shop in shops)
                                        {
                                            <option value="@shop.Value">@shop.Text</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group mb-3">
                                <label for="bookShopId" class="form-label">Select Book</label>
                                <select id="bookShopId" name="bookShopId" class="form-control" required disabled>
                                    <option value="">-- First select a shop --</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group mb-3">
                                <label for="quantity" class="form-label">Quantity</label>
                                <input type="number" id="quantity" name="quantity" class="form-control" min="1" value="1" required disabled />
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group mb-3">
                                <label class="form-label">&nbsp;</label>
                                <div>
                                    <button type="submit" class="btn btn-success" disabled id="placeOrderBtn">Place Order</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Order Summary -->
                    <div id="orderSummary" class="mt-3" style="display: none;">
                        <div class="alert alert-info">
                            <strong>Order Summary:</strong>
                            <div id="summaryContent"></div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        
        @if (Model.Orders.Any())
        {
            <div class="card mt-4">
                <div class="card-header">
                    <h5>Order History</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-sm">
                            <thead>
                                <tr>
                                    <th>Order Date</th>
                                    <th>Book</th>
                                    <th>Shop</th>
                                    <th>Quantity</th>
                                    <th>Total Price</th>
                                    <th>Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var order in Model.Orders)
                                {
                                    <tr>
                                        <td>@order.OrderDate.ToString("MM/dd/yyyy")</td>
                                        <td>@order.BookShop.Book.Title</td>
                                        <td>@order.BookShop.Shop.Name</td>
                                        <td>@order.Quantity</td>
                                        <td>@order.TotalPrice.ToString("C")</td>
                                        <td>
                                            <span class="badge bg-@(order.OrderStatus == "Completed" ? "success" : order.OrderStatus == "Shipped" ? "info" : "warning")">
                                                @order.OrderStatus
                                            </span>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        }
    </div>
    
    <div class="col-md-4">
        <div class="card">
            <div class="card-body">
                <h5>Actions</h5>
                <div class="d-grid gap-2">
                    <a asp-action="Edit" asp-route-id="@Model.CustomerId" class="btn btn-warning">Edit Customer</a>
                    <a asp-action="Delete" asp-route-id="@Model.CustomerId" class="btn btn-danger">Delete Customer</a>
                    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Handle shop selection
            $('#shopId').change(function() {
                var shopId = $(this).val();
                var bookSelect = $('#bookShopId');
                var quantityInput = $('#quantity');
                var placeOrderBtn = $('#placeOrderBtn');
                var orderSummary = $('#orderSummary');
                
                if (shopId) {
                    // Enable book selection and fetch books
                    bookSelect.prop('disabled', false);
                    bookSelect.html('<option value="">Loading books...</option>');
                    
                    $.get('/Customers/GetBooksForShop', { shopId: shopId }, function(books) {
                        bookSelect.html('<option value="">-- Select a Book --</option>');
                        
                        if (books.length === 0) {
                            bookSelect.html('<option value="">No books available in this shop</option>');
                            bookSelect.prop('disabled', true);
                        } else {
                            $.each(books, function(index, book) {
                                bookSelect.append('<option value="' + book.bookShopId + '" data-price="' + book.price + '" data-quantity="' + book.availableQuantity + '">' + 
                                    book.bookTitle + ' by ' + book.author + ' (Available: ' + book.availableQuantity + ', Price: $' + book.price + ')</option>');
                            });
                        }
                    });
                } else {
                    // Reset form
                    bookSelect.html('<option value="">-- First select a shop --</option>');
                    bookSelect.prop('disabled', true);
                    quantityInput.prop('disabled', true);
                    placeOrderBtn.prop('disabled', true);
                    orderSummary.hide();
                }
            });
            
            // Handle book selection
            $('#bookShopId').change(function() {
                var selectedOption = $(this).find('option:selected');
                var quantityInput = $('#quantity');
                var placeOrderBtn = $('#placeOrderBtn');
                var orderSummary = $('#orderSummary');
                
                if (selectedOption.val()) {
                    var maxQuantity = parseInt(selectedOption.data('quantity'));
                    var price = parseFloat(selectedOption.data('price'));
                    
                    quantityInput.prop('disabled', false);
                    quantityInput.attr('max', maxQuantity);
                    quantityInput.val(1);
                    placeOrderBtn.prop('disabled', false);
                    
                    updateOrderSummary(price, 1);
                } else {
                    quantityInput.prop('disabled', true);
                    placeOrderBtn.prop('disabled', true);
                    orderSummary.hide();
                }
            });
            
            // Handle quantity change
            $('#quantity').on('input', function() {
                var selectedOption = $('#bookShopId').find('option:selected');
                if (selectedOption.val()) {
                    var price = parseFloat(selectedOption.data('price'));
                    var quantity = parseInt($(this).val()) || 0;
                    updateOrderSummary(price, quantity);
                }
            });
            
            function updateOrderSummary(price, quantity) {
                var total = price * quantity;
                var selectedBook = $('#bookShopId').find('option:selected').text();
                var selectedShop = $('#shopId').find('option:selected').text();
                
                $('#summaryContent').html(
                    '<strong>Book:</strong> ' + selectedBook + '<br>' +
                    '<strong>Shop:</strong> ' + selectedShop + '<br>' +
                    '<strong>Unit Price:</strong> $' + price.toFixed(2) + '<br>' +
                    '<strong>Quantity:</strong> ' + quantity + '<br>' +
                    '<strong>Total:</strong> $' + total.toFixed(2)
                );
                
                $('#orderSummary').show();
            }
        });
    </script>
}
